pihole:
  # Default values for pihole.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  dualStack:
    # -- set this to true to enable creation of DualStack services or creation of separate IPv6 services if `serviceDns.type` is set to `"LoadBalancer"`
    enabled: true

  # -- Configuration for the DNS service on port 53
  serviceDns:
    # -- deploys a mixed (TCP + UDP) Service instead of separate ones
    mixedService: true

    # -- `spec.type` for the DNS Service
    type: LoadBalancer

    # -- A fixed `spec.loadBalancerIP` for the DNS Service
    loadBalancerIP: 192.168.31.25
    # -- A fixed `spec.loadBalancerIP` for the IPv6 DNS Service
    loadBalancerIPv6:

  # -- Configuration for the DHCP service on port 67
  serviceDhcp:
    # -- Generate a Service resource for DHCP traffic
    enabled: false

  # -- Configuration for the web interface service
  serviceWeb:
    # -- Configuration for the HTTPS web interface listener
    https:
      # -- Generate a service for HTTPS traffic
      enabled: false

  # -- Use an existing secret for the admin password.
  admin:
    # -- Specify an existing secret to use as admin password
    existingSecret: admin-password

  # -- extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use. You can use either scalars or project cm, secrets or pod fields via valueFrom
  extraEnvVars:
    # issue 360
    # FTLCONF_dns_listeningMode: 'all'
    # TZ: UTC
    # Project a variable
    # SOME_VAR:
    #   valueFrom:
    #     configMapKeyRef:
    #       key: some-var
    #       name: my-config-map
    TZ: Europe/Amsterdam
    FTLCONF_webserver_port: 80,[::]:80

  # -- default upstream DNS 1 server to use
  DNS1: 1.1.1.2;2606:4700:4700::1112
  # -- default upstream DNS 2 server to use
  DNS2: 1.0.0.2;2606:4700:4700::1002

  dnsmasq:
    # -- Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
    additionalHostsEntries:
    # - 192.168.0.3     host4
    # - 192.168.0.4     host5
    - 192.168.31.2     pandora.lan

    # -- Here we specify custom cname entries that should point to `A` records or
    # elements in customDnsEntries array.
    # The format should be:
    #  - cname=cname.foo.bar,foo.bar
    #  - cname=cname.bar.foo,bar.foo
    #  - cname=cname record,dns record
    customCnameEntries: []
    # Here we specify custom cname entries that should point to `A` records or
    # elements in customDnsEntries array.
    # The format should be:
    #   - cname=cname.foo.bar,foo.bar
    #   - cname=cname.bar.foo,bar.foo
    #   - cname=cname record,dns record

  # -- list of adlists to import during initial start of the container
  adlists:
  # If you want to provide blocklists, add them here.
  # - https://hosts-file.net/grm.txt
  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts
  - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
  - https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt
  - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts
  - https://v.firebog.net/hosts/static/w3kbl.txt
  - https://raw.githubusercontent.com/matomo-org/referrer-spam-blacklist/master/spammers.txt
  - https://someonewhocares.org/hosts/zero/hosts
  - https://raw.githubusercontent.com/VeleSila/yhosts/master/hosts
  - https://winhelp2002.mvps.org/hosts.txt
  - https://v.firebog.net/hosts/neohostsbasic.txt
  - https://raw.githubusercontent.com/RooneyMcNibNug/pihole-stuff/master/SNAFU.txt
  - https://paulgb.github.io/BarbBlock/blacklists/hosts-file.txt
  - https://adaway.org/hosts.txt
  - https://v.firebog.net/hosts/AdguardDNS.txt
  - https://v.firebog.net/hosts/Admiral.txt
  - https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
  - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
  - https://v.firebog.net/hosts/Easylist.txt
  - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
  - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
  - https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
  - https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts
  - https://v.firebog.net/hosts/Easyprivacy.txt
  - https://v.firebog.net/hosts/Prigent-Ads.txt
  - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
  - https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
  - https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
  - https://hostfiles.frogeye.fr/multiparty-trackers-hosts.txt
  - https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt
  - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt
  - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt
  - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/AmazonFireTV.txt
  - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt
  - https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt
  - https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt
  - https://v.firebog.net/hosts/Prigent-Crypto.txt
  - https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt
  - https://phishing.army/download/phishing_army_blocklist_extended.txt
  - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
  - https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
  - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts
  - https://urlhaus.abuse.ch/downloads/hostfile/
  - https://v.firebog.net/hosts/Prigent-Malware.txt
  - https://raw.githubusercontent.com/anudeepND/blacklist/master/facebook.txt

  # -- list of whitelisted domains to import during initial start of the container
  whitelist:
  # If you want to provide whitelisted domains, add them here.
  # - clients4.google.com
  - sentry.io
  - s1.sentry-cdn.com
  - www.googleadservices.com
  - fonts.gstatic.com
  - eu.docusign.net
  # - (\.|^)openvpn\.net$
  # - (\.|^)openvpn\.com$
  - fntech.com
  - api.loganalytics.io
  - rt.applicationinsights.microsoft.com
  - api.loganalytics.azure.com
  - (\.|^)datadoghq.com

  # -- values that should be added to pihole-FTL.conf. You can use either scalars or project cm, secrets or pod fields via valueFrom
  ftl:
    # Add values for pihole-FTL.conf
    # MAXDBDAYS: 14
    # Project a variable
    # LOCAL_IPV4:
    #   valueFrom:
    #     fieldRef:
    #       fieldPath: status.podIP
    dns_listeningMode: single
    dns_interface: eth0
    dns_revServers: true,192.168.1.0/24,192.168.1.1

  # -- any extra kubernetes manifests you might want
  extraObjects:
  # - apiVersion: v1
  #   kind: ConfigMap
  #   metadata:
  #     name: pi-hole-lighttpd-external-conf
  #   data:
  #     external.conf: |
  #       $HTTP["host"] =~ "example.foo" {
  #         # If we're using a non-standard host for pihole, ensure the Pi-hole
  #         # Block Page knows that this is not a blocked domain
  #         setenv.add-environment = ("fqdn" => "true")
  #
  #         # Enable the SSL engine with a cert, only for this specific host
  #         $SERVER["socket"] == ":443" {
  #           ssl.engine = "enable"
  #           ssl.pemfile = "/etc/ssl/lighttpd-private/tls.crt"
  #           ssl.privkey = "/etc/ssl/lighttpd-private/tls.key"
  #           ssl.ca-file = "/etc/ssl/lighttpd-private/ca.crt"
  #           ssl.honor-cipher-order = "enable"
  #           ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
  #           ssl.use-sslv2 = "disable"
  #           ssl.use-sslv3 = "disable"
  #         }
  #       }
  #
  #       # Redirect HTTP to HTTPS
  #       $HTTP["scheme"] == "http" {
  #         $HTTP["host"] =~ ".*" {
  #           url.redirect = (".*" => "https://%0$0")
  #         }
  #       }
  - apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: pihole-cert
    spec:
      secretName: pihole-cert
      dnsNames:
      - "{{ .Values.ingressHost }}"
      issuerRef:
        name: letsencrypt-production
        kind: ClusterIssuer

  - apiVersion: traefik.io/v1alpha1
    kind: IngressRoute
    metadata:
      name: pihole-web
    spec:
      entryPoints:
      - web
      - websecure
      routes:
      - match: Host(`{{ .Values.ingressHost }}`)
        kind: Rule
        services:
        - name: pihole-web
          port: 80
      tls:
        secretName: pihole-cert
